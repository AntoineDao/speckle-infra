# Default values for speckle-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Feature flags
## @descriptionStart
## This object is a central location to define feature flags for the whole chart.
## @descriptionEnd
global:
  featureFlags:
    ## @param featureFlags.automateModule High level flag fully toggles the integrated automate module
    automateModule:
      enabled: false
      url: "https://automate.speckle.dev"

    ## @param featureFlags.workspacesMultiRegion Toggles whether multi-region is available within workspaces. workspacesModule must also be enabled.
    workspacesMultiRegion:
      enabled: false

    ## @param featureFlags.gendoAIModule High level flag that toggles the Gendo AI render module
    gendoAIModule:
      enabled: false
      ## @param server.gendoAI.apiUrl The url of the Gendo AI application, including protocol.
      apiUrl: 'https://api.gendo.ai/external/generate'

      ## @param server.gendoAI.creditLimit The number of Gendo AI credit a user gets every month.
      creditLimit: 40
      key:
        ## @param server.gendoAI.key.secretName The name of the Kubernetes Secret containing the Gendo AI key. If left blank, will default to the `secretName` parameter.
        secretName: ''
        ## @param server.gendoAI.key.secretKey The key within the Kubernetes Secret holding the Gendo AI key as its value.
        secretKey: 'gendoai_key'
      ratelimiting:
        ## @param server.gendoAI.ratelimiting.renderRequest The number of render requests allowed per period
        renderRequest: 1
        ## @param server.gendoAI.ratelimiting.renderRequestPeriodSeconds The period in seconds for the render request limit
        renderRequestPeriodSeconds: 20
        ## @param server.gendoAI.ratelimiting.burstRenderRequest The number of render requests allowed in 'burst' mode when the other limit is reached.
        burstRenderRequest: 3
        ## @param server.gendoAI.ratelimiting.burstRenderRequestPeriodSeconds The period in seconds for the burst render request limit.
        burstRenderRequestPeriodSeconds: 60

    ## @param featureFlags.workspacesModule High level flag fully toggles the workspaces module
    workspacesModule:
      enabled: false
      # This is a secret which should contain the following keys: license_token
      secretName: "speckle-server-workspaces"

    ## @param featureFlags.workspacesSSO High level flag fully toggles the workspaces dynamic sso
    workspacesSSO:
      enabled: false
    ## @param featureFlags.multipleEmailsModule High level flag fully toggles multiple emails
    multipleEmailsModule:
      enabled: false
    ## @param featureFlags.gatekeeperModule High level flag that enables the gatekeeper module
    gatekeeperModule:
      enabled: false
    
    ## @param featureFlags.billingIntegration High level flag that enables the billing integration
    billingIntegration:
      enabled: false
      # This is a secret which should contain the following keys: 
      # stripe_api_key, stripe_endpoint_signing_key
      secretName: speckle-server-billing
      products:
        workspaceGuestSeat:
          id: some-random-id
          monthlyPriceID: some-random-id
          yearlyPriceID: some-random-id
        workspaceStarterSeat:
          id: some-random-id
          monthlyPriceID: some-random-id
          yearlyPriceID: some-random-id
        workspacePlusSeat:
          id: some-random-id
          monthlyPriceID: some-random-id
          yearlyPriceID: some-random-id
        workspaceBusinessSeat:
          id: some-random-id
          monthlyPriceID: some-random-id
          yearlyPriceID: some-random-id

    mailchimp:
      enabled: false
      # This is a secret which should contain the following keys: mailchimp_api_key
      secretName: speckle-server-mailchimp
      serverPrefix: ""
      newsletterListId: ""
      onboardingListId: ""
      onboardingJourneyId: ""
      onboardingStepId: ""

      
    ## @param featureFlags.forceOnboarding Forces onboarding for all users
    forceOnboarding:
      enabled: false
    ## @param featureFlags.noPersonalEmails Disables the ability sign up with personal email addresses
    noPersonalEmails:
      enabled: false
    ## @param featureFlags.workspacesNewPlan Toggles whether the new (Q1 2025) plans for workspaces are available. workspacesModule must also be enabled for this to take effect.
    workspacesNewPlan:
      enabled: false

    workspacesSso:
      enabled: false


postgresql:
  enabled: false
  postgresqlUsername: speckle
  postgresqlPassword: speckle
  postgresqlDatabase: speckle
  service:
    port: 5432
  persistence:
    enabled: true
    size: 8Gi
    accessMode: ReadWriteOnce
    storageClass: ""

redis:
  enabled: false
  connectionString: {}

secretName: speckle-server

server:
  
  ## @param server.logLevel The minimum level of logs which will be output. Suitable values are trace, debug, info, warn, error, fatal, or silent
  ##
  logLevel: 'info'
  ## @param server.logPretty If enabled, will output logs in a human-readable format. Otherwise, logs will be output in JSON format.
  ##
  logPretty: false
  ## @param server.enableFe2Messaging If enabled, the related FE1 deployment will show banners/messages about the new frontend
  ##
  enableFe2Messaging: false
  onboarding:
    stream_url: 'https://latest.speckle.systems/projects/843d07eb10'
    stream_cache_bust_number: 1
  sessionSecret:
    secretName: ""
    secretKey: ""
  fileUploads:
    enabled: false
  adminOverride:
    enabled: false
  weeklyDigest:
    enabled: false
  monitoring:
    mp:
      enabled: false
    apollo:
      enabled: false
      graph_id: ""
      key:
        secretName: ""
        secretKey: ""
  ratelimiting:
    enabled: false
    all_requests: ""
    burst_all_requests: ""
    user_create: ""
    burst_user_create: ""
    stream_create: ""
    burst_stream_create: ""
    commit_create: ""
    burst_commit_create: ""
    post_getobjects_streamid: ""
    burst_post_getobjects_streamid: ""
    post_diff_streamid: ""
    burst_post_diff_streamid: ""
    post_objects_streamid: ""
    burst_post_objects_streamid: ""
    get_objects_streamid_objectid: ""
    burst_get_objects_streamid_objectid: ""
    get_objects_streamid_objectid_single: ""
    burst_get_objects_streamid_objectid_single: ""
    post_graphql: ""
    burst_post_graphql: ""
    get_auth: ""
    burst_get_auth: ""
  file_size_limit_mb: 100
  max_project_models_per_page: 50
  max_object_size_mb: 50
  max_object_upload_file_size_mb: 50
  migration:
    movedFrom: ""
    movedTo: ""
  asyncRequestContext:
    enabled: false
  auth:
    local:
      enabled: false
    google:
      enabled: false
      client_id: ""
      clientSecret:
        secretName: ""
        secretKey: ""
    github:
      enabled: false
      client_id: ""
      clientSecret:
        secretName: ""
        secretKey: ""
    azure_ad:
      enabled: false
      org_name: ""
      identity_metadata: ""
      issuer: ""
      client_id: ""
      clientSecret:
        secretName: ""
        secretKey: ""
    oidc:
      enabled: false
      name: ""
      discovery_url: ""
      client_id: ""
      clientSecret:
        secretName: ""
        secretKey: ""
  email:
    enabled: false
    host: ""
    port: 587
    username: ""
    password:
      secretName: ""
      secretKey: ""
    from: ""
  tlsRejectUnauthorized: true
  preview_service:
    dedicatedPreviewsQueue: false
  openTelemetry:
    tracing:
      url: ""
      key: ""
      value: ""

db:
  connectionString:
    secretName: ""
    secretKey: ""
  maxConnectionsServer: 10
  connectionCreateTimeoutMillis: 30000
  connectionAcquireTimeoutMillis: 30000
  knexAsyncStackTraces:
    enabled: false
  knexImprovedTelemetryStackTraces: false
  PGSSLMODE: "disable"
  useCertificate: false

s3:
  configMap:
    enabled: false
  endpoint: ""
  access_key: ""
  bucket: ""
  secret_key:
    secretName: ""
    secretKey: ""
  create_bucket: false
  region: ""

email:
  enabled: false
  host: ""
  port: 587
  username: ""
  password:
    secretName: ""
    secretKey: ""
  from: ""

tlsRejectUnauthorized: true

preview_service:
  dedicatedPreviewsQueue: false

openTelemetry:
  tracing:
    url: ""
    key: ""
    value: ""


# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: speckle/speckle-server
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2.23.10"


# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  privileged: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 20000

securityContext:
  runAsNonRoot: true
  runAsUser: 20000
  fsGroup: 25000
  fsGroupChangePolicy: OnRootMismatch
  runAsGroup: 30000
  seccompProfile:
    type: RuntimeDefault

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 3000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

priorityClassName: ""

nodeSelector: {}

tolerations: []

affinity: {}
